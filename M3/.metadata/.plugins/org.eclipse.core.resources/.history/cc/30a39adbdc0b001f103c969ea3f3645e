package classes;

import exceptions.ResourceException;

import java.util.ArrayList;

import classes.attackunits.Swordsman;
import interfaces.MilitaryUnit;
import interfaces.Variables;

public class Civilization {
	
	//Atributo
	private static int technologyDefense;
	private static int technologyAttack;
	private int wood;
	private int iron;
	private int food;
	private int mana;
	private int magicTower;
	private int farm;
	private int church;
	private int smithy;
	private int carpentry;
	private int battles;
	private ArrayList<ArrayList> army = new ArrayList<ArrayList>(9);
	
	
	
	//cONSTRUCTORES
	
	
	
	public Civilization() {
		super();
		
		
		
		army.add(new ArrayList<Swordsman>());

		
	}
	
	
	
	
	
	
	
	
	
	
	
	
	
	//GETTERS AND SETTERS
	
	
	public static int getTechnologyDefense() {
		return technologyDefense;
	}

	public static void setTechnologyDefense(int technologyDefense) {
		technologyDefense = technologyDefense;
	}
	public static int getTechnologyAttack() {
		return technologyAttack;
	}
	public void setTechnologyAttack(int technologyAttack) {
		this.technologyAttack = technologyAttack;
	}
	public int getWood() {
		return wood;
	}
	public void setWood(int wood) {
		this.wood = wood;
	}
	public int getIron() {
		return iron;
	}
	public void setIron(int iron) {
		this.iron = iron;
	}
	public int getFood() {
		return food;
	}
	public void setFood(int food) {
		this.food = food;
	}
	public int getMana() {
		return mana;
	}
	public void setMana(int mana) {
		this.mana = mana;
	}
	public int getMagicTower() {
		return magicTower;
	}
	public void setMagicTower(int magicTower) {
		this.magicTower = magicTower;
	}
	public int getFarm() {
		return farm;
	}
	public void setFarm(int farm) {
		this.farm = farm;
	}
	public int getChurch() {
		return church;
	}
	public void setChurch(int curch) {
		this.church = curch;
	}
	
	public void CreateChurch() {
		
		//compribar recursos para crear church
	}
	
	
	
	
	
	
	public int getSmithy() {
		return smithy;
	}
	public void setSmithy(int smithy) {
		this.smithy = smithy;
	}
	public int getCarpentry() {
		return carpentry;
	}
	public void setCarpentry(int carpentry) {
		this.carpentry = carpentry;
	}
	public int getBattles() {
		return battles;
	}
	public void setBattles(int battles) {
		this.battles = battles;
	}
	public ArrayList<ArrayList> getArmy() {
		return army;
	}
	public void setArmy(ArrayList<ArrayList> army) {
		this.army = army;
	}
	
	
	
	
	
	//METODOS
	
	
	public void decreaseResources(int r) {

	}
		
	
	
	
	
	
	
	
	
	
	
	public void newSwordsman(int i) {
		int plus_armor = Variables.ARMOR_SWORDSMAN+((getTechnologyDefense()*Variables.PLUS_ARMOR_SWORDSMAN_BY_TECHNOLOGY)*1000/100);
		int plus_attack = Variables.BASE_DAMAGE_SWORDSMAN+((getTechnologyAttack()*Variables.PLUS_ATTACK_SWORDSMAN_BY_TECHNOLOGY)*1000/100);
		
		//iteramos en los soldados que se ha pedido
		
		for (int e = 0; e < i; e++) {
			
			
			if (getFood() >= 8000 || getWood() >= 3000 || getIron() >= 50) {
				
					army.get(0).add(new Swordsman(plus_armor,plus_attack));
					setFood(getFood()-8000);
					

				}else {
					throw new ResourceException("Insufficient resources");
				}
			}

		}




		
	}
	
	
	
	
	
}
