package classes.attackunits;
import interfaces.Variables;
import classes.Civilization;

public abstract class AttackUnit {
	
	//Atributos
	private int armor;
	private int initialArmor;
	private int baseDamage;
	private int experience;
	private boolean sanctified;
	
	
	
	
	//CONSTRUCTOR 1
	
	public AttackUnit(int armor, int baseDamage) {
		
		
		if (Civilization.getTechnologyAttack()==0){
			setArmor(Variables.ARMOR_SWORDSMAN);
		}
		else if (Civilization.getTechnologyAttack()>0) {
			setArmor(Variables.ARMOR_SWORDSMAN + (Civilization.getTechnologyDefense()*Variables.PLUS_ARMOR_SWORDSMAN_BY_TECHNOLOGY)*1000/100);

		}else {
			raise error //lanzar error ya que technology es menor que 0
		}
	
		this.armor = armor;
		this.baseDamage = baseDamage;
		
		
		
	}
	
	
	
	
	
	//GETTERS AND SETTERS




	public int getArmor() {
		return armor;
	}



	public void setArmor(int armor) {
		this.armor = armor;
	}



	public int getInitialArmor() {
		return initialArmor;
	}



	public void setInitialArmor(int initialArmor) {
		this.initialArmor = initialArmor;
	}



	public int getBaseDamage() {
		return baseDamage;
	}



	public void setBaseDamage(int baseDamage) {
		this.baseDamage = baseDamage;
	}



	public int getExperience() {
		return experience;
	}



	public void setExperience(int experience) {
		this.experience = experience;
	}



	public boolean isSanctified() {
		return sanctified;
	}



	public void setSanctified(boolean sanctified) {
		this.sanctified = sanctified;
	}
	
	
	
	
	
	
}
